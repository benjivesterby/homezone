{ config, pkgs, lib, ... }:

let
  # https://github.com/k3s-io/k3s/issues/6518
  containerdTemplate = pkgs.writeText "config.toml.tmpl"
    (builtins.replaceStrings ["nvidia-container-runtime"] ["${pkgs.nvidia-container-runtime}/bin/nvidia-container-runtime"]
      (lib.readFile ./config.toml.tmpl)
    );
in
{
  networking = {
    firewall = {
      enable = false;
      allowedTCPPorts = lib.mkDefault [ 6443 ];
    };
  };

  virtualisation = {
    libvirtd.enable = true;
    lxc.enable = true;
  };

  boot.kernel.sysctl."net.ipv6.conf.wlp4s0.accept_ra" = 2;

  security.polkit.enable = true;

  services = {
    k3s.enable = true;
    # for longhorn
    openiscsi.enable = true;
    # generated by running iscsi-iname after installation,
    # it just spits out a unique identifier each time.
    openiscsi.name = config.networking.homezone.currentHost.iscsiInitiatorName;
  };

  environment.systemPackages = [ pkgs.k3s pkgs.iptables ];
  systemd.services.k3s.path = [ pkgs.ipset ];

  # write a k3s registries config file
  environment.etc = {
    "rancher/k3s/registries.yaml" = {
      source = ./registries.yaml;
      mode = "0600";
    };
  };

  # So apparently k3s will config nvidia automatically
  # https://docs.k3s.io/advanced#nvidia-container-runtime-support
  #
  # write the containerd config template file
  # writing to /var/lib requires an activation script
  # https://discourse.nixos.org/t/how-to-create-folder-in-var-lib-with-nix/15647
  #
  # The tmpl needs the full path to the container-shim
  # https://github.com/k3s-io/k3s/issues/6518
  system.activationScripts.writeContainerdConfigTemplate = lib.mkIf (config.networking.hostName == "belakay") (lib.stringAfter [ "var" ] ''
    cp ${containerdTemplate} /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
  '');
}
